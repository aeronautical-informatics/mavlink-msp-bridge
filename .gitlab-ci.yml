# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/rust/tags/
image: "rust:latest"

# Optional: Install a C compiler, cmake and git into the container.
# You will often need this when you (or any of your dependencies) depends on C code.

stages:
  - build
  - test

# Use cargo to test the project
cargo:build:stable:
  stage: build
  before_script:
    - rustup toolchain add stable
    - rustup target add --toolchain stable x86_64-unknown-linux-musl
  script:
    - cargo +stable build --all

cargo:build:beta:
  stage: build
  before_script:
    - rustup toolchain add beta
    - rustup target add --toolchain beta x86_64-unknown-linux-musl
  script:
    - cargo +beta build --all

cargo:build:nightly:
  stage: build
  before_script:
    - rustup toolchain add nightly
    - rustup target add --toolchain nightly x86_64-unknown-linux-musl
  script:
    - cargo +nightly build --all

cargo:test:stable:
  stage: test
  before_script:
    - rustup toolchain add stable
    - rustup target add --toolchain stable x86_64-unknown-linux-musl
  script:
    - cargo +stable test --all

cargo:test:beta:
  stage: test
  before_script:
    - rustup toolchain add beta
    - rustup target add --toolchain beta x86_64-unknown-linux-musl
  script:
    - cargo +beta test --all

cargo:test:nightly:
  stage: test
  before_script:
    - rustup toolchain add nightly
    - rustup target add --toolchain nightly x86_64-unknown-linux-musl
  script:
    - cargo +nightly test --all
